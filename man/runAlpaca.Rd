% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/runAlpaca.R
\name{runAlpaca}
\alias{runAlpaca}
\title{Run ALPACA}
\usage{
runAlpaca(panda_net1, panda_net2, file.stem, verbose = F)
}
\arguments{
\item{panda_net1}{Data Frame indicating one entire network generate by \code{\link{runPanda}}}

\item{panda_net2}{Data Frame indicating another entire network generate by \code{\link{runPanda}}}

\item{file.stem}{The folder location and title under which all results will be stored.}

\item{verbose}{Indicates whether the full differential modularity matrix should also be written to a file. Defaults to FALSE.}
}
\value{
A string message showing the location of output file if file.stem is given, 
       or a List where first element is the membership vector and second element is the contribution score of each node to its module's total differential modularity
}
\description{
\strong{ALPACA}(ALtered Partitions Across Community Architectures) is a method for comparing two genome-scale networks derived from different phenotypic states to identify condition-specific modules.
\href{https://www.nature.com/articles/s41540-018-0052-5}{[(Padi and Quackenbush 2018)])}
This function compares two networks generate by \code{\link{runPanda}} in this package and finds the sets of nodes that best characterize the change in modular structure.
}
\examples{
# refer to four input datasets files in inst/extdat
treated_expression_file_path <- system.file("extdata", "expr4.txt", package = "netZoo", mustWork = TRUE)
control_expression_file_path <- system.file("extdata", "expr10.txt", package = "netZoo", mustWork = TRUE)
motif_file_path <- system.file("extdata", "chip.txt", package = "netZoo", mustWork = TRUE)
ppi_file_path <- system.file("extdata", "ppi.txt", package = "netZoo", mustWork = TRUE)


# Run PANDA for treated and control network
treated_panda_net <- runPanda(e = treated_expression_file_path, m = motif_file_path, ppi = ppi_file_path, rm_missing = TRUE )$panda
control_panda_net <- runPanda(e = control_expression_file_path, m = motif_file_path, ppi = ppi_file_path, rm_missing = TRUE )$panda
 
# Run ALPACA
alpaca<- runAlpaca(treated_panda_net, control_panda_net, "~/Desktop/TB", verbose=T)

}
